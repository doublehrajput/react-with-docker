{
	// Place your com.examruler.stickers workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Author Info": {
		"scope": "javascript,typescript,javascriptreact",
		"prefix": "authorinfo",
		"body": [
			"/**",
			" * @author Harish Rajput",
			" * @email doublehrajput@gmail.com",
			" * @create  $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			" * @desc ${0}",
			" */"
		]
	},
	"Prop Types": {
		"scope": "javascript,typescript,javascriptreact",
		"prefix": "propTy",
		"body": [
			"import PropTypes from \"prop-types\";",
		]
	},
	"Create React Functional Component": {
		"scope": "javascript,typescript,javascriptreact",
		"prefix": "rfc",
		"body": [
			"import React from 'react';",
			"",
			"/**",
			" * @type {React.FC<any>}",
			" * @returns {React.ReactElement}",
			" */",
			"const ${1:name} = () => {",
			"  return <></>;",
			"};",
			"",
			"${1:name}.displayName = '${1:name}';",
			"",
			"${1:name}.defaultProps = {};",
			"",
			"${1:name}.propTypes = {};",
			"",
			"export default ${1:name};",
			""
		]
	}
}